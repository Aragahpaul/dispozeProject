name: Deploy to EKS

on:
  push:
    branches:
      - dev

jobs:
  lint-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Validate HTML and CSS using HTMLProofer
        uses: anishathalye/proof-html@v2.1.2
        with:
          directory: './'
          check_html: true
          check_css: true

      - name: Validate JavaScript by running ESLint
        uses: iCrawl/action-eslint@v1
        with:
          custom-glob: './Js/**/*.js'

  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
          mask-password: true
          skip-logout: false
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set environment variables
        run: |
          echo "ECR_REGISTRY=public.ecr.aws/${{ secrets.ECR_REGISTRY_ALIAS }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=${{ secrets.REPO_NAME }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push image to ECR
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Install kubectl
        run: |
          curl -o kubectl https://amazon-eks.s3.eu-west-1.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
          echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          envsubst < k8s/deployment.yaml > k8s/deployment-subst.yaml
          cat k8s/deployment-subst.yaml
          kubectl apply -f k8s/deployment-subst.yaml
          kubectl apply -f k8s/service.yaml
